// davis.js JavaScript Routing, version: 0.0.2
// (c) 2011 Oliver Nightingale
//
//  Released under MIT license.
//
Davis=function(c){var b=new Davis.App;c.call(Davis.Route.drawer);return b};
Davis.listener=function(){var c=function(d){return function(e){e=new Davis.Request(d.call($(e.target)));Davis.history.pushState(e);return false}},b=c(function(){return{method:"get",fullPath:this.attr("href"),title:this.attr("title")}}),a=c(function(){return{method:this.attr("method"),fullPath:[this.attr("action"),"?",this.serialize()].join(""),title:this.attr("title")}});return{listen:function(){$(document).delegate(this.settings.formSelector,"submit",a);$(document).delegate(this.settings.linkSelector,
"click",b)},unlisten:function(){$(document).undelegate(this.settings.linkSelector,"click",b);$(document).undelegate(this.settings.formSelector,"submit",a)}}}();Davis.event=function(){var c={};return{bind:function(b,a){c[b]||(c[b]=[]);c[b].push(a);return this},trigger:function(b,a){var d=this;c[b]||(c[b]=[]);c[b].forEach(function(e){e.call(d,a)});return this}}}();
Davis.logger=function(){var c=function(b){b=Array.prototype.slice.call(b);b.unshift("["+Date()+"]");return b};return{error:function(){window.console&&console.error.apply(console,c(arguments))},info:function(){window.console&&console.info.apply(console,c(arguments))},warn:function(){window.console&&console.warn.apply(console,c(arguments))}}}();
Davis.Route=function(){var c=/:([\w\d]+)/g,b=[],a=function(d,e,f){this.paramNames=function(){for(var g=[],h;h=c.exec(e);)g.push(h[1]);return g}();var i;e instanceof RegExp||(i=RegExp("^"+e.replace(c,"([^/]+)")+"$","g"));this.path=i;this.method=d;this.callback=f;b.push(this)};a.prototype={match:function(d,e){return this.method==d&&this.path.test(e)},run:function(d){this.path.lastIndex=0;var e=this.path.exec(d.path);if(e){e.shift();for(var f=0;f<e.length;f++)d.params[this.paramNames[f]]=e[f]}this.path.lastIndex=
0;this.callback.call(d)},toString:function(){return[this.method,this.path].join(" ")}};a.drawer={};["get","post","put","delete"].forEach(function(d){a.drawer[d]=function(e,f){new Davis.Route(d,e,f)}});a.lookup=function(d,e){return b.filter(function(f){return f.match(d,e)})[0]};a.clearAll=function(){b=[]};return a}();
Davis.history=function(){var c=[],b=function(a){return function(d){d.state?a(d.state):a(new Davis.Request({method:"get",fullPath:"/",title:"root"}))}};return{replaceState:function(a){history.replaceState(a,a.title,a.path);c.forEach(function(d){d(a)})},pushState:function(a){history.pushState(a,a.title,a.path);c.forEach(function(d){d(a)})},onChange:function(a){c.push(a);a=b(a);window.addEventListener("popstate",a)}}}();
Davis.Request=function(c){var b=this;this.params={};this.title=c.title;(this.queryString=c.fullPath.split("?")[1])&&this.queryString.split("&").forEach(function(a){var d=a.split("=")[0];a=a.split("=")[1];var e;if(e=/^(\w+)%5B(\w+)%5D/.exec(d)){var f=e[1];d=e[2];e=b.params[f]||{};e[d]=a;b.params[f]=e}else b.params[d]=a});this.method=this.params._method||c.method;this.path=c.fullPath.replace(/\?.+$/,"")};
Davis.Request.prototype={redirect:function(c){Davis.history.replaceState(new Davis.Request({method:"get",fullPath:c,title:this.title}))},toString:function(){return[this.method.toUpperCase(),this.path].join(" ")}};
Davis.App=function(){var c=function(){this.foo="bar";this.running=false};c.prototype=$.extend({configure:function(b){b.call(this.settings)},settings:{linkSelector:"a",formSelector:"form",logger:Davis.logger},start:function(){var b=this;this.bind("runRoute",function(a){b.settings.logger.info("runRoute: "+a.toString())}).bind("routeNotFound",function(a){b.settings.logger.warn("routeNotFound: "+a.toString())}).bind("start",function(){b.settings.logger.info("application started")});this.listen();this.trigger("start");
Davis.history.onChange(function(a){b.trigger("lookupRoute",a);var d=Davis.Route.lookup(a.method,a.path);if(d){b.trigger("runRoute",a);d.run(a)}else b.trigger("routeNotFound",a)});this.running=true},stop:function(){this.unlisten();this.bind("stop")}},Davis.listener,Davis.event);return c}();
